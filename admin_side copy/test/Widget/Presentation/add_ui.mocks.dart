// Mocks generated by Mockito 5.4.4 from annotations
// in admin_side/test/Widget/Presentation/add_ui.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i5;

import 'package:admin_side/Application/add_page/add_bloc.dart' as _i3;
import 'package:flutter/material.dart' as _i1;
import 'package:mockito/mockito.dart' as _i2;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_1 extends _i2.SmartFake implements _i1.Widget {
  _FakeWidget_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i1.DiagnosticLevel? minLevel = _i1.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [AddSalonBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddSalonBloc extends _i2.Mock implements _i3.AddSalonBloc {
  MockAddSalonBloc() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i1.GlobalKey<_i1.FormState> get formKey => (super.noSuchMethod(
        Invocation.getter(#formKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);

  @override
  String get uploadedImagePath => (super.noSuchMethod(
        Invocation.getter(#uploadedImagePath),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#uploadedImagePath),
        ),
      ) as String);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void setName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLocation(String? location) => super.noSuchMethod(
        Invocation.method(
          #setLocation,
          [location],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pickPicture(_i1.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #pickPicture,
          [context],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.Widget displaySelectedImage() => (super.noSuchMethod(
        Invocation.method(
          #displaySelectedImage,
          [],
        ),
        returnValue: _FakeWidget_1(
          this,
          Invocation.method(
            #displaySelectedImage,
            [],
          ),
        ),
      ) as _i1.Widget);

  @override
  void submitForm(
    _i1.BuildContext? context,
    String? accessToken,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #submitForm,
          [
            context,
            accessToken,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void validateAndSaveForm() => super.noSuchMethod(
        Invocation.method(
          #validateAndSaveForm,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
